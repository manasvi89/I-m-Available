package Project;

import javax.swing.JFrame;
import oracle.jdbc.OracleConnection;
import oracle.jdbc.OracleResultSet;
import oracle.jdbc.OracleStatement;
import java.awt.Font;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;


public class PENDING_REQUEST1 extends javax.swing.JFrame {
    OracleConnection conn;
    OracleStatement stmt;
    static int a;
    Statement stmt1;
    OracleResultSet rs, rs1, rs2, rs4;
    int ac_ID;
    String RECIPIENT;
ArrayList<Integer> ids;
  // GMail password

    String name1, gender, email_id1, contactno1, password1;
    DefaultTableModel model;

    static int id;

    public PENDING_REQUEST1(int id) throws ClassNotFoundException, SQLException {
        PENDING_REQUEST1.id=id;
        initComponents();
        Class.forName("oracle.jdbc.driver.OracleDriver");
        DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());

//step2 create  the connection object
        conn = (OracleConnection) DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "Samarth");

        stmt = (OracleStatement) conn.createStatement();
        details(id);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("P E N D I N G  R E Q U E S T S :");

        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8_MacOS_Minimize_30px.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/icons8_MacOS_Close_30px.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Here is a list of some exciting packages awaiting you !");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jTable1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(100);
        jTable1.setSelectionBackground(new java.awt.Color(255, 153, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 1154, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(1988, 1988, 1988))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(717, 717, 717)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel15))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addGap(99, 99, 99)
                .addComponent(jLabel15)
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.setState(JFrame.ICONIFIED);       // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked

    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked

    }//GEN-LAST:event_jLabel15MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        

            try {                                     
                
                
                
                int hi = 0;
                
                String sQ = "select  first_name,email_id,gender,contact_number from HR.account_details where account_id=" + id;
                try {
                    rs4 = (OracleResultSet) stmt.executeQuery(sQ);
                    while (rs4.next()) {
                        name1 = rs4.getString("first_name");
                        
                        email_id1 = rs4.getString("email_id");
                        gender = rs4.getString("gender");
                        contactno1 = rs4.getString("contact_number");
                        
                    }
                    System.out.println(name1);
                    System.out.println(gender);
                    System.out.println(email_id1);
                    System.out.println(contactno1);
                    // String iQ = "INSERT INTO `login`(`ID`) VALUES (" + sid + ")";
                } catch (Exception e) {
                    System.out.println(e);
                }
                
                int i = jTable1.getSelectedRow();
                int seeker_id = ids.get(i);
                String sQ2 = "select helper_id from  Hr.join_hs where seeker_id =" + seeker_id;
                try {
                    rs1 = (OracleResultSet) stmt.executeQuery(sQ2);
                    
                    while (rs1.next()) {
                        hi = rs1.getInt("helper_id");
                    }
                    
                } catch (SQLException ex) {
                    System.out.println("Exception " + ex);
                }
                System.out.println(i + " " + seeker_id);
                String sQ4 = "insert into HR.history(helper_id,seeker_id) values (" + hi + "," + seeker_id + ")";
                ResultSet rs1 = stmt.executeQuery(sQ4);
                
                String sQ5 = "update HR.helper_details set flag=1 where helper_id = (" + hi + ")";
                ResultSet rs2 = stmt.executeQuery(sQ5);
                
                String sQ6 = "update HR.seeker_details set flag=1 where seeker_id = (" + seeker_id + ")";
                ResultSet rs3 = stmt.executeQuery(sQ6);
                
                String abc = JOptionPane.showInputDialog(null, "Please Write a meassage");
                System.out.println(abc);
//                String subject = "Hello Mate";
//                String body = "Hey mate! I will love to help you. \nHelper Info:\nName - " + name1 + "\nRoll No - " + gender + "\nEmail ID - " + email_id1 + "\nContact Number - " + contactno1 + "\n\nMessage from seeker: " + abc;
//                
                int row = jTable1.getSelectedRow();
                // System.out.println("a");
                ac_ID = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                System.out.println(ac_ID);
                
                PENDING_REQUEST1.a = JOptionPane.showConfirmDialog(null, "Confirm");
                System.out.println(row);
                System.out.println(PENDING_REQUEST1.a);
                
                if (PENDING_REQUEST1.a == 0) {
                    
                    String eQ = "SELECT email_id FROM HR.account_details WHERE account_id = " + ac_ID;
                    
                    try {
                        rs = (OracleResultSet) stmt.executeQuery(eQ);
                        while (rs.next()) {
                            RECIPIENT = rs.getString(1);
                        }
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    
                    //     System.out.println("insertQuery= " + insertQuery);
                    System.out.println(RECIPIENT);
                    String to = RECIPIENT;
                    String from = "Testing";
                    String host = "smtp.gmail.com";
                    
                    Properties props = new Properties();
                    props.put("mail.smtp.auth", "true");
                    props.put("mail.smtp.starttls.enable", "true");
                    props.put("mail.smtp.host", host);
                    props.put("mail.smtp.port", "587");
                    
                    // Get the Session object.
                    Session session = Session.getInstance(props, new GmailAuthenticator1());
                    
                    try {
                        
                        Message message = new MimeMessage(session);
                        
                        message.setFrom(new InternetAddress(from));
                        
                        // Set To: header field of the header.
                        message.setRecipients(Message.RecipientType.TO,
                                InternetAddress.parse(to));
                        message.setRecipients(Message.RecipientType.TO,
                                InternetAddress.parse(RECIPIENT));
                        
                        // Set Subject: header field
                        message.setSubject("Confirmed Ride Details");
                        
                        // Now set the actual message
                        message.setText("Dear User," + "\n"
                                + "Welcome to I'm Available! One last thing before you’re good to go" + "\n"
                                + "Here are your details of Ride !" + "\n"
                                + "Helper Name             :" + name1 + "\n"
                                        + "Email-ID                   :" + email_id1 + "\n"
                                                + "Gender                     :" + gender + "\n"
                                                        + "Contact Number         :" + contactno1 + "\n"
                                                                + "Message for you       :" + abc + "\n"
                                                                                                + "Please show this E-mail to the Helper " + "\n\n\n\n"
                                                                                                + "For any queries or clarifications, please contact us at samarth.s@ahduni.edu.in or manasvi.d@ahduni.edu.in or umang.k@ahduni.edu.in\n"
                                                                                                + "\n"
                                                                                                + "We will be glad to help you.\n"
                                                                                                + "\n"
                                                                                                + "Yours Sincerely,\n"
                                                                                                + "I'm Available Team.\n"
                                                                                                + "\n"
                                                                                                + "Please do not reply to this email");
                        
                        try {
                            // Send message
                            Transport.send(message);
                        } catch (MessagingException ex) {
                            Logger.getLogger(PENDING_REQUEST1.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                        JOptionPane.showMessageDialog(null, "Check your E-Mail");
                        
                        String sQ3 = "delete from HR.join_hs where helper_id = " + hi;
                        try {
                            //rs = stmt.executeQuery(deleteQuery);
                            stmt.executeUpdate(sQ3);
                            
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        LOGIN1 u = new LOGIN1();
        u.setVisible(true);
        u.pack();
        u.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
                        
                        
                    } catch (AddressException ex) {
                        Logger.getLogger(PENDING_REQUEST1.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (MessagingException ex) {
                        Logger.getLogger(PENDING_REQUEST1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(PENDING_REQUEST1.class.getName()).log(Level.SEVERE, null, ex);
            }

    }//GEN-LAST:event_jTable1MouseClicked
    void details(int id) throws SQLException {
        ids = new ArrayList<Integer>();

        String q = "select helper_id from HR.helper_details natural join Hr.join_hs where account_id =" + id;

        rs = (OracleResultSet) stmt.executeQuery(q);

        while (rs.next()) {
            int hd = rs.getInt("helper_id");
           System.out.println(hd);
            String q1 = "select seeker_id from HR.join_hs where helper_id =" + hd;
            ResultSet rs1 = (OracleResultSet) stmt.executeQuery(q1);
            while (rs1.next()) {
                ids.add(rs1.getInt("seeker_id"));
            }
        }
        Object data[][] = new Object[ids.size()][9];
        for (int i = 0; i < ids.size(); i++) {
            String sQ3 = "select account_id from HR.seeker_details where seeker_id =" + ids.get(i);

            ResultSet rs3 = (OracleResultSet) stmt.executeQuery(sQ3);
            while (rs3.next()) {
                int aI = rs3.getInt("account_id");
                String q2 = "select a.account_id,a.first_name,a.gender,a.contact_number,s.seeker_destination,s.seeker_pickup, s.time_seeker,s.date_seeker,s.seat_required from HR.account_details a inner join HR.seeker_details s on(a.account_id=" + aI + ") where seeker_id =" + ids.get(i) + "";
                ResultSet rs2 = (OracleResultSet) stmt.executeQuery(q2);

                while (rs2.next()) {
                    data[i][0] = rs2.getString("account_id");
                    data[i][1] = rs2.getString("first_name");
                    data[i][2] = rs2.getString("gender");
                    data[i][3] = rs2.getLong("contact_number");
                    data[i][4] = rs2.getString("seeker_pickup");
                    data[i][5] = rs2.getString("seeker_destination");
                    data[i][6] = rs2.getDate("date_seeker");
                    data[i][7] = rs2.getString("time_seeker");
                    data[i][8] = rs2.getInt("seat_required");

                }
            }

        }

        model = new DefaultTableModel();

        String columnNames[] = {"Account ID", "Name", "Gender", " Contact Number", "Pick Up", "Destination", "Date", "Time", "Total Seats Req"};
        Font f = new Font("Seoge UI Light", Font.PLAIN, 24);
        JTableHeader header = jTable1.getTableHeader();
        header.setFont(f);
        model.setDataVector(data, columnNames);
        jTable1.setModel(model);
        jTable1.setRowMargin(10);
        jTable1.setCellSelectionEnabled(true);
        jTable1.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PENDING_REQUEST1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PENDING_REQUEST1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PENDING_REQUEST1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PENDING_REQUEST1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new PENDING_REQUEST1(id).setVisible(true);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(PENDING_REQUEST1.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
class GmailAuthenticator1 extends javax.mail.Authenticator {
    final String username = "noreply.imavailable@gmail.com";//change accordingly
    final String pwd = "imavailable123";//change accordingly

    protected PasswordAuthentication getPasswordAuthentication() {
        return new PasswordAuthentication(username, pwd);
    }
}

